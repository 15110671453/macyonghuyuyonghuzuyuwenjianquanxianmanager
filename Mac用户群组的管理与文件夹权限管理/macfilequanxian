chmod 命令
功能：chmod命令是非常重要的，用于改变文件或目录的访问权限.用户用它控制文件或目录的访问权限.
语法：该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。
1. 文字设定法
chmod [who] [+ | - | =] [mode] 文件名?
参数：
操作对象who可是下述字母中的任一个或者它们的组合：
u 表示“用户（user）”，即文件或目录的所有者。
g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户。
o 表示“其他（others）用户”。
a 表示“所有（all）用户”。它是系统默认值。
操作符号可以是：
+ 添加某个权限。
- 取消某个权限。
= 赋予给定权限并取消其他所有权限（如果有的话）。
设置mode所表示的权限可用下述字母的任意组合：
r 可读。
w 可写。
x 可执行。
X 只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性。
s 在文件执行时把进程的属主或组ID置为该文件的文件属主。方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位。
t 保存程序的文本到交换设备上。
u 与文件属主拥有一样的权限。
g 与和文件属主同组的用户拥有一样的权限。
o 与其他用户拥有一样的权限。
文件名：以空格分开的要改变权限的文件列表，支持通配符。
在一个命令行中可给出多个权限方式，其间用逗号隔开。例如：chmod g+r，o+r example
使同组和其他用户对文件example 有读权限。



chmod 命令
功能：chmod命令是非常重要的，用于改变文件或目录的访问权限.用户用它控制文件或目录的访问权限.
语法：该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。
2. 数字设定法
我们必须首先了解用数字表示的属性的含义：0表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限，然后将其相加。所以数字属性的格式应为3个从0到7的八进制数，其顺序是（u）（g）（o）。
例如，如果想让某个文件的属主有”读/写”二种权限，需要把4（可读）+2（可写）＝6（读/写).
数字设定法的一般形式为：
chmod [mode] 文件名?




例子：
（1）文字设定法：
例1：$ chmod a+x sort
即设定文件sort的属性为：
文件属主（u） 增加执行权限
与文件属主同组用户（g） 增加执行权限
其他用户（o） 增加执行权限
例2：$ chmod ug+w，o-x text
即设定文件text的属性为：
文件属主（u） 增加写权限
与文件属主同组用户（g） 增加写权限
其他用户（o） 删除执行权限
例3：$ chmod u+s a.out
假设执行chmod后a.out的权限为（可以用ls – l a.out命令来看）：
–rws–x–x 1 inin users 7192 Nov 4 14:22 a.out
并且这个执行文件要用到一个文本文件shiyan1.c，其文件存取权限为“–rw——-”，即该文件只有其属主具有读写权限。
当其他用户执行a.out这个程序时，他的身份因这个程序暂时变成inin（由于chmod命令中使用了s选项），所以他就能够读取shiyan1.c这个文件（虽然这个文件被设定为其他人不具备任何权限），这就是s的功能。
因此，在整个系统中特别是root本身，最好不要过多的设置这种类型的文件（除非必要）这样可以保障系统的安全，避免因为某些程序的bug而使系统遭到入侵。
例4：$ chmod a–x mm.txt
$ chmod –x mm.txt
$ chmod ugo–x mm.txt
以上这三个命令都是将文件mm.txt的执行权限删除，它设定的对象为所有使用者。
（2）数字设定法：
例1： $ chmod 644 mm.txt
$ ls –l
即设定文件mm.txt的属性为：
-rw-r–r– 1 inin users 1155 Nov 5 11:22 mm.txt
文件属主（u）inin 拥有读、写权限
与文件属主同组人用户（g） 拥有读权限
其他人（o） 拥有读权限
例2： $ chmod 750 wch.txt
把一个文件夹的权限设置为任何用户可读可写。
¥ chmod  777 /usres/a
$ ls –l
-rwxr-x— 1 inin users 44137 Nov 12 9:22 wchtxt
即设定wchtxt这个文件的属性为：
文件主本人（u）inin 可读/可写/可执行权
与文件主同组人（g） 可读/可执行权
其他人（o） 没有任何权限


只是改变文件夹所属用户 所属组 与其他组 的文件夹权限
如何改变文件夹所属的用户 改变文件夹所属的用户组呢？？？

chgrp命令
功能：改变文件或目录所属的组。
语法：chgrp [选项] group filename?
该命令改变指定文件所属的用户组。其中group可以是用户组ID，也可以是/etc/group文件中用户组的组名。文件名是以空格分开的要改变属组的文件列表，支持通配符。如果用户不是该文件的属主或超级用户，则不能改变该文件的组。
参数：
- R 递归式地改变指定目录及其下的所有子目录和文件的属组。
例1：$ chgrp – R book /opt/local /book
改变/opt/local /book/及其子目录下的所有文件的属组为book。
chown 命令
功能：更改某个文件或目录的属主和属组。这个命令也很常用。例如root用户把自己的一个文件拷贝给用户xu，为了让用户xu能够存取这个文件，root用户应该把这个文件的属主设为xu，否则，用户xu无法存取这个文件。
语法：chown [选项] 用户或组 文件
说明：chown将指定文件的拥有者改为指定的用户或组。用户可以是用户名或用户ID。组可以是组名或组ID。文件是以空格分开的要改变权限的文件列表，支持通配符。
参数：
- R 递归式地改变指定目录及其下的所有子目录和文件的拥有者。
- v 显示chown命令所做的工作。
例1：把文件shiyan.c的所有者改为wang。
$ chown wang shiyan.c
例2：把目录/his及其下的所有文件和子目录的属主改成wang，属组改成users。
$ chown – R wang.users /his

